/**
 * MIT License
 * 
 * Copyright (C) 2021 - 2025 by Adama Platform Engineering, LLC
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package ape.translator;

import org.junit.Test;

public class GeneratedMatrixTests extends GeneratedBase {
  private String cached_Ingestion_1 = null;
  private String get_Ingestion_1() {
    if (cached_Ingestion_1 != null) {
      return cached_Ingestion_1;
    }
    cached_Ingestion_1 = generateTestOutput(true, "Ingestion_1", "./test_code/Matrix_Ingestion_success.a");
    return cached_Ingestion_1;
  }

  @Test
  public void testIngestionEmission() {
    assertEmissionGood(get_Ingestion_1());
  }

  @Test
  public void testIngestionSuccess() {
    assertLivePass(get_Ingestion_1());
  }

  @Test
  public void testIngestionNoFormatException() {
    assertNoFormatException(get_Ingestion_1());
  }

  @Test
  public void testIngestionGoodWillHappy() {
    assertGoodWillHappy(get_Ingestion_1());
  }

  @Test
  public void testIngestionExceptionFree() {
    assertExceptionFree(get_Ingestion_1());
  }

  @Test
  public void testIngestionTODOFree() {
    assertTODOFree(get_Ingestion_1());
  }

  @Test
  public void stable_Ingestion_1() {
    String live = get_Ingestion_1();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Matrix_Ingestion_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n=FORMAT===================================================");
    gold.append("\n record R {");
    gold.append("\n  public matrix2 m2;");
    gold.append("\n  public matrix3 m3;");
    gold.append("\n  public matrix4 m4;");
    gold.append("\n  public matrixh4 mh4;");
    gold.append("\n}");
    gold.append("\nR r;");
    gold.append("\nmessage M {");
    gold.append("\n  matrix2 m2;");
    gold.append("\n  matrix3 m3;");
    gold.append("\n  matrix4 m4;");
    gold.append("\n  matrixh4 mh4;");
    gold.append("\n}");
    gold.append("\nchannel foo(M m) {");
    gold.append("\n  r <- m;");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n==========================================================");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport ape.runtime.async.*;");
    gold.append("\nimport ape.runtime.contracts.*;");
    gold.append("\nimport ape.runtime.delta.*;");
    gold.append("\nimport ape.runtime.exceptions.*;");
    gold.append("\nimport ape.runtime.graph.*;");
    gold.append("\nimport ape.runtime.index.*;");
    gold.append("\nimport ape.runtime.json.*;");
    gold.append("\nimport ape.runtime.natives.*;");
    gold.append("\nimport ape.runtime.natives.algo.*;");
    gold.append("\nimport ape.runtime.natives.lists.*;");
    gold.append("\nimport ape.runtime.ops.*;");
    gold.append("\nimport ape.runtime.reactives.*;");
    gold.append("\nimport ape.runtime.reactives.tables.*;");
    gold.append("\nimport ape.runtime.remote.*;");
    gold.append("\nimport ape.runtime.remote.client.*;");
    gold.append("\nimport ape.runtime.remote.replication.*;");
    gold.append("\nimport ape.runtime.stdlib.*;");
    gold.append("\nimport ape.runtime.sys.*;");
    gold.append("\nimport ape.runtime.sys.cron.*;");
    gold.append("\nimport ape.runtime.sys.web.*;");
    gold.append("\nimport ape.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class Ingestion_1 extends LivingDocument {");
    gold.append("\n  private final RTxR r;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory() + 2176;");
    gold.append("\n    __sum += r.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public Ingestion_1(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    r = new RTxR(this);");
    gold.append("\n    r.__link();");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __settle(Set<Integer> __viewers) {");
    gold.append("\n    r.__settle(__viewers);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"r\":");
    gold.append("\n            r.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            __timezoneCachedZoneId = ZoneId.of(__timezone.get());");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__enqueued\":");
    gold.append("\n            __hydrateEnqueuedTaskManager(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__log\":");
    gold.append("\n            __hydrateLog(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"r\":");
    gold.append("\n            r.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__enqueued\":");
    gold.append("\n            __hydrateEnqueuedTaskManager(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__log\":");
    gold.append("\n            __hydrateLog(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__snapshot\");");
    gold.append("\n    __writer.writeString(__space + \"/\" + __key);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"r\");");
    gold.append("\n    r.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpEnqueuedTaskManager(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    r.__commit(\"r\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    r.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __writeRxReport(JsonStreamWriter __writer) { }");
    gold.append("\n  public class DeltaPrivacyCache {");
    gold.append("\n    public DeltaPrivacyCache(NtPrincipal __who) {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaIngestion_1 implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaIngestion_1() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public boolean show(Ingestion_1 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      DeltaPrivacyCache __policy_cache = new DeltaPrivacyCache(__writer.who);");
    gold.append("\n      __writer.setCacheObject(__policy_cache);");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n      return true;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective) {");
    gold.append("\n    Ingestion_1 __self = this;");
    gold.append("\n    DeltaIngestion_1 __state = new DeltaIngestion_1();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    int __viewId = __genViewId();");
    gold.append("\n    return new PrivateView(__viewId, __who, ___perspective) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __viewId));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() { return 64; }");
    gold.append("\n    public void __reset() {}");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __parsed() throws AbortMessageException {}");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_R = new String[] {};");
    gold.append("\n  private class RTxR extends RxRecordBase<RTxR> {");
    gold.append("\n    private final RTxR __this;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxMatrix2 m2;");
    gold.append("\n    private final RxMatrix3 m3;");
    gold.append("\n    private final RxMatrix4 m4;");
    gold.append("\n    private final RxMatrixH4 mh4;");
    gold.append("\n    private RTxR(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      this.__this = this;");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      m2 = new RxMatrix2(this, new NtMatrix2(1.0, 0.0, 0.0, 1.0));");
    gold.append("\n      m3 = new RxMatrix3(this, new NtMatrix3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0));");
    gold.append("\n      m4 = new RxMatrix4(this, new NtMatrix4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0));");
    gold.append("\n      mh4 = new RxMatrixH4(this, new NtMatrixH4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0));");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory() + 0;");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      __sum += m2.__memory();");
    gold.append("\n      __sum += m3.__memory();");
    gold.append("\n      __sum += m4.__memory();");
    gold.append("\n      __sum += mh4.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_R;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public Object __fieldOf(String __name) {");
    gold.append("\n      switch (__name) {");
    gold.append("\n        case \"id\":");
    gold.append("\n          return id;");
    gold.append("\n        case \"m2\":");
    gold.append("\n          return m2;");
    gold.append("\n        case \"m3\":");
    gold.append("\n          return m3;");
    gold.append("\n        case \"m4\":");
    gold.append("\n          return m4;");
    gold.append("\n        case \"mh4\":");
    gold.append("\n          return mh4;");
    gold.append("\n        default:");
    gold.append("\n          return null;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __settle(Set<Integer> __viewers) {");
    gold.append("\n      __lowerInvalid();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"m2\":");
    gold.append("\n              m2.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"m3\":");
    gold.append("\n              m3.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"m4\":");
    gold.append("\n              m4.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"mh4\":");
    gold.append("\n              mh4.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"m2\":");
    gold.append("\n              m2.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"m3\":");
    gold.append("\n              m3.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"m4\":");
    gold.append("\n              m4.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"mh4\":");
    gold.append("\n              mh4.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"m2\");");
    gold.append("\n      m2.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"m3\");");
    gold.append("\n      m3.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"m4\");");
    gold.append("\n      m4.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"mh4\");");
    gold.append("\n      mh4.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        m2.__commit(\"m2\", __forward, __reverse);");
    gold.append("\n        m3.__commit(\"m3\", __forward, __reverse);");
    gold.append("\n        m4.__commit(\"m4\", __forward, __reverse);");
    gold.append("\n        mh4.__commit(\"mh4\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        m2.__revert();");
    gold.append("\n        m3.__revert();");
    gold.append("\n        m4.__revert();");
    gold.append("\n        mh4.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeRxReport(JsonStreamWriter __writer) { }");
    gold.append("\n    @Override");
    gold.append("\n    public RTxR __link() {");
    gold.append("\n      return this;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __invalidateIndex(TablePubSub __pubsub) {}");
    gold.append("\n    @Override");
    gold.append("\n    public void __pumpIndexEvents(TablePubSub __pubsub) {}");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"R\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxR implements DeltaNode {");
    gold.append("\n    private DStringProxy __dm2;");
    gold.append("\n    private DStringProxy __dm3;");
    gold.append("\n    private DStringProxy __dm4;");
    gold.append("\n    private DStringProxy __dmh4;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxR() {");
    gold.append("\n      __dm2 = new DStringProxy();");
    gold.append("\n      __dm3 = new DStringProxy();");
    gold.append("\n      __dm4 = new DStringProxy();");
    gold.append("\n      __dmh4 = new DStringProxy();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dm2.__memory();");
    gold.append("\n      __sum += __dm3.__memory();");
    gold.append("\n      __sum += __dm4.__memory();");
    gold.append("\n      __sum += __dmh4.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public boolean show(RTxR __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      DeltaPrivacyCache __policy_cache = (DeltaPrivacyCache) __writer.getCacheObject();");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dm2.show(__item.m2.get(), __obj.planField(\"m2\"));");
    gold.append("\n      __dm3.show(__item.m3.get(), __obj.planField(\"m3\"));");
    gold.append("\n      __dm4.show(__item.m4.get(), __obj.planField(\"m4\"));");
    gold.append("\n      __dmh4.show(__item.mh4.get(), __obj.planField(\"mh4\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n      return true;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dm2.clear();");
    gold.append("\n      __dm3.clear();");
    gold.append("\n      __dm4.clear();");
    gold.append("\n      __dmh4.clear();");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  class DynCmp_RTxR implements Comparator<RTxR> {");
    gold.append("\n    private final CompareField[] parsed;");
    gold.append("\n    DynCmp_RTxR(String instructions) {");
    gold.append("\n      this.parsed = DynCompareParser.parse(instructions);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxR __a, RTxR __b) {");
    gold.append("\n      for (CompareField field : parsed) {");
    gold.append("\n        int delta = 0;");
    gold.append("\n        switch (field.name) {");
    gold.append("\n          case \"id\":");
    gold.append("\n            delta = __a.id.compareTo(__b.id);");
    gold.append("\n            break;");
    gold.append("\n        }");
    gold.append("\n        if (delta != 0) {");
    gold.append("\n          return field.desc ? -delta : delta;");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n      return 0;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxM extends NtMessageBase {");
    gold.append("\n    private final RTxM __this;");
    gold.append("\n    private NtMatrix2 m2 = new NtMatrix2(1.0, 0.0, 0.0, 1.0);");
    gold.append("\n    private NtMatrix3 m3 = new NtMatrix3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0);");
    gold.append("\n    private NtMatrix4 m4 = new NtMatrix4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);");
    gold.append("\n    private NtMatrixH4 mh4 = new NtMatrixH4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0);");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __mem = 64;");
    gold.append("\n      __mem += Sizing.memoryOf(m2);");
    gold.append("\n      __mem += Sizing.memoryOf(m3);");
    gold.append("\n      __mem += Sizing.memoryOf(m4);");
    gold.append("\n      __mem += Sizing.memoryOf(mh4);");
    gold.append("\n      return __mem;");
    gold.append("\n    }");
    gold.append("\n    public void __reset() {");
    gold.append("\n      this.m2 = new NtMatrix2(1.0, 0.0, 0.0, 1.0);");
    gold.append("\n      this.m3 = new NtMatrix3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0);");
    gold.append("\n      this.m4 = new NtMatrix4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);");
    gold.append("\n      this.mh4 = new NtMatrixH4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0);");
    gold.append("\n    }");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"m2\");");
    gold.append("\n      __hash.hashNtMatrix2(this.m2);");
    gold.append("\n      __hash.hashString(\"m3\");");
    gold.append("\n      __hash.hashNtMatrix3(this.m3);");
    gold.append("\n      __hash.hashString(\"m4\");");
    gold.append("\n      __hash.hashNtMatrix4(this.m4);");
    gold.append("\n      __hash.hashString(\"mh4\");");
    gold.append("\n      __hash.hashNtMatrixH4(this.mh4);");
    gold.append("\n      __hash.hashString(\"M\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS_M = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_M;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTxM(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustStartObject();");
    gold.append("\n      while (__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"m2\":");
    gold.append("\n            this.m2 = __reader.readNtMatrix2();");
    gold.append("\n            break;");
    gold.append("\n          case \"m3\":");
    gold.append("\n            this.m3 = __reader.readNtMatrix3();");
    gold.append("\n            break;");
    gold.append("\n          case \"m4\":");
    gold.append("\n            this.m4 = __reader.readNtMatrix4();");
    gold.append("\n            break;");
    gold.append("\n          case \"mh4\":");
    gold.append("\n            this.mh4 = __reader.readNtMatrixH4();");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"m2\");");
    gold.append("\n      __writer.writeNtMatrix2(m2);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"m3\");");
    gold.append("\n      __writer.writeNtMatrix3(m3);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"m4\");");
    gold.append("\n      __writer.writeNtMatrix4(m4);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"mh4\");");
    gold.append("\n      __writer.writeNtMatrixH4(mh4);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __parsed() throws AbortMessageException {}");
    gold.append("\n    private RTxM() { __this = this; }");
    gold.append("\n    private RTxM(NtMatrix2 m2, NtMatrix3 m3, NtMatrix4 m4, NtMatrixH4 mh4) {");
    gold.append("\n      this.__this = this;");
    gold.append("\n      this.m2 = m2;");
    gold.append("\n      this.m3 = m3;");
    gold.append("\n      this.m4 = m4;");
    gold.append("\n      this.mh4 = mh4;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxM implements DeltaNode {");
    gold.append("\n    private DStringProxy __dm2;");
    gold.append("\n    private DStringProxy __dm3;");
    gold.append("\n    private DStringProxy __dm4;");
    gold.append("\n    private DStringProxy __dmh4;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxM() {");
    gold.append("\n      __dm2 = new DStringProxy();");
    gold.append("\n      __dm3 = new DStringProxy();");
    gold.append("\n      __dm4 = new DStringProxy();");
    gold.append("\n      __dmh4 = new DStringProxy();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dm2.__memory();");
    gold.append("\n      __sum += __dm3.__memory();");
    gold.append("\n      __sum += __dm4.__memory();");
    gold.append("\n      __sum += __dmh4.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxM __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dm2.show(__item.m2, __obj.planField(\"m2\"));");
    gold.append("\n      __dm3.show(__item.m3, __obj.planField(\"m3\"));");
    gold.append("\n      __dm4.show(__item.m4, __obj.planField(\"m4\"));");
    gold.append("\n      __dmh4.show(__item.mh4, __obj.planField(\"mh4\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dm2.clear();");
    gold.append("\n      __dm3.clear();");
    gold.append("\n      __dm4.clear();");
    gold.append("\n      __dmh4.clear();");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  public static void __create_generic_clients(ServiceRegistry __registry, HeaderDecryptor decryptor) throws Exception {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public Service __findService(String __name) { return null; }");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_foo(CoreRequestContext __context, NtPrincipal __who, RTxM m) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(0);");
    gold.append("\n    {");
    gold.append("\n      RTxR _AutoRef0 = r;");
    gold.append("\n      RTxM _AutoExpr2 = m;");
    gold.append("\n      __code_cost += 5;");
    gold.append("\n      _AutoRef0.m2.set(_AutoExpr2.m2);");
    gold.append("\n      _AutoRef0.m3.set(_AutoExpr2.m3);");
    gold.append("\n      _AutoRef0.m4.set(_AutoExpr2.m4);");
    gold.append("\n      _AutoRef0.mh4.set(_AutoExpr2.mh4);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    switch (channel) {");
    gold.append("\n      case \"foo\":");
    gold.append("\n        return true;");
    gold.append("\n    default:");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext __context, String __channel, Object __message) throws AbortMessageException {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"foo\":");
    gold.append("\n        handleChannelMessage_foo(__context, __context.who, (RTxM) __message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"foo\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_foo(__task.context(__getKey()), __task.who, (RTxM)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"foo\":");
    gold.append("\n        return new RTxM(__reader);");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __metrics() { return \"{}\"; }");
    gold.append("\n  @Override");
    gold.append("\n  public String __traffic(CoreRequestContext __context) { return \"\"; }");
    gold.append("\n  @Override");
    gold.append("\n  public void __debug(JsonStreamWriter __writer) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected long __computeGraphs() { return 0; }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  public AuthResponse __authpipe(CoreRequestContext __context, String __message) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __make_cron_progress() {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_cron() {}");
    gold.append("\n  @Override");
    gold.append("\n  public Long __predict_cron_wake_time() { return null; }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(CoreRequestContext __context, WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(CoreRequestContext __context, WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(CoreRequestContext __context, WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(CoreRequestContext __context, WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) throws AbortMessageException {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext _c, NtMessageBase _m) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--=[LivingDocumentFactory COMPILING]=---");
    gold.append("\n--=[LivingDocumentFactory MADE]=---");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"r\":{\"type\":{\"nature\":\"reactive_ref\",\"ref\":\"R\"},\"computed\":false,\"privacy\":\"private\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"R\":{\"nature\":\"reactive_record\",\"name\":\"R\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"computed\":false,\"privacy\":\"private\"},\"m2\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"matrix2\"},\"computed\":false,\"privacy\":\"public\"},\"m3\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"matrix3\"},\"computed\":false,\"privacy\":\"public\"},\"m4\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"matrix4\"},\"computed\":false,\"privacy\":\"public\"},\"mh4\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"matrixh4\"},\"computed\":false,\"privacy\":\"public\"}}},\"M\":{\"nature\":\"native_message\",\"name\":\"M\",\"anonymous\":false,\"fields\":{\"m2\":{\"type\":{\"nature\":\"native_value\",\"type\":\"matrix2\"},\"computed\":false,\"privacy\":\"public\"},\"m3\":{\"type\":{\"nature\":\"native_value\",\"type\":\"matrix3\"},\"computed\":false,\"privacy\":\"public\"},\"m4\":{\"type\":{\"nature\":\"native_value\",\"type\":\"matrix4\"},\"computed\":false,\"privacy\":\"public\"},\"mh4\":{\"type\":{\"nature\":\"native_value\",\"type\":\"matrixh4\"},\"computed\":false,\"privacy\":\"public\"}}}},\"channels\":{\"foo\":\"M\"},\"channels-privacy\":{\"foo\":{\"open\":false,\"privacy\":[]}},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:0");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:4250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:0");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\nNO_ONE|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"75\"} need:false in:0");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"seq\":4}");
    gold.append("\nRANDO|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__time\":\"100\"} need:false in:0");
    gold.append("\nRANDO|SUCCESS:5");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n+ RANDO DELTA:{\"seq\":5}");
    gold.append("\nMEMORY:4368");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"__snapshot\":\"0/0\",\"r\":{\"id\":0,\"m2\":\"1.0|0.0|0.0|1.0\",\"m3\":\"1.0|0.0|0.0|0.0|1.0|0.0|0.0|0.0|1.0\",\"m4\":\"1.0|0.0|0.0|0.0|0.0|1.0|0.0|0.0|0.0|0.0|1.0|0.0|0.0|0.0|0.0|1.0\",\"mh4\":\"1.0|0.0|0.0|0.0|0.0|1.0|0.0|0.0|0.0|0.0|1.0|0.0\"},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{}");
    gold.append("\n--METRIC RESULTS-----------------------------------");
    gold.append("\n{\"__snapshot\":\"0/0\",\"r\":{\"id\":0,\"m2\":\"1.0|0.0|0.0|1.0\",\"m3\":\"1.0|0.0|0.0|0.0|1.0|0.0|0.0|0.0|1.0\",\"m4\":\"1.0|0.0|0.0|0.0|0.0|1.0|0.0|0.0|0.0|0.0|1.0|0.0|0.0|0.0|0.0|1.0\",\"mh4\":\"1.0|0.0|0.0|0.0|0.0|1.0|0.0|0.0|0.0|0.0|1.0|0.0\"},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"__snapshot\":\"0/0\",\"r\":{\"id\":0,\"m2\":\"1.0|0.0|0.0|1.0\",\"m3\":\"1.0|0.0|0.0|0.0|1.0|0.0|0.0|0.0|1.0\",\"m4\":\"1.0|0.0|0.0|0.0|0.0|1.0|0.0|0.0|0.0|0.0|1.0|0.0|0.0|0.0|0.0|1.0\",\"mh4\":\"1.0|0.0|0.0|0.0|0.0|1.0|0.0|0.0|0.0|0.0|1.0|0.0\"},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_Math_2 = null;
  private String get_Math_2() {
    if (cached_Math_2 != null) {
      return cached_Math_2;
    }
    cached_Math_2 = generateTestOutput(true, "Math_2", "./test_code/Matrix_Math_success.a");
    return cached_Math_2;
  }

  @Test
  public void testMathEmission() {
    assertEmissionGood(get_Math_2());
  }

  @Test
  public void testMathSuccess() {
    assertLivePass(get_Math_2());
  }

  @Test
  public void testMathNoFormatException() {
    assertNoFormatException(get_Math_2());
  }

  @Test
  public void testMathGoodWillHappy() {
    assertGoodWillHappy(get_Math_2());
  }

  @Test
  public void testMathExceptionFree() {
    assertExceptionFree(get_Math_2());
  }

  @Test
  public void testMathTODOFree() {
    assertTODOFree(get_Math_2());
  }

  @Test
  public void stable_Math_2() {
    String live = get_Math_2();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Matrix_Math_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n=FORMAT===================================================");
    gold.append("\n public formula m2xm2 = @matrix [1, 2, 3, 4] * @matrix [5, 6, 7, 8];");
    gold.append("\npublic formula m3xm3 = @matrix [1, 2, 3 ~ 4, 5, 6 ~ 7, 8, 9] * @matrix [10, 20, 30 ~ 40, 50, 60 ~ 70, 80, 90];");
    gold.append("\npublic formula m4_m4 = @matrix[1, 2, 3, 4 ~ 5, 6, 7, 8 ~ 9, 10, 11, 12 ~ 13, 14, 15, 16] * @matrix[10, 20, 30, 40 ~ 50, 60, 70, 80 ~ 90, 100, 110, 120 ~ 130, 140, 150, 160];");
    gold.append("\npublic formula mh4_mh4 = @matrix[1, 2, 3, 4 ~ 5, 6, 7, 8 ~ 9, 10, 11, 12] * @matrix[10, 20, 30, 40 ~ 50, 60, 70, 80 ~ 90, 100, 110, 120];");
    gold.append("\npublic formula m2_inv = (@matrix [1, 2 ~ 3, 4]).inverse();");
    gold.append("\npublic formula m3_inv = (@matrix [1, 2, 3 ~ 4, 5, 6 ~ 7, 8, 9]).inverse();");
    gold.append("\npublic formula m4_inv = (@matrix[1, 2, 3, 4 ~ 5, 6, 7, 8 ~ 9, 10, 11, 12 ~ 13, 14, 15, 16]).inverse();");
    gold.append("\npublic formula mh4_inv = (@matrix[1, 2, 3, 4 ~ 5, 6, 7, 8 ~ 9, 10, 11, 12]).inverse();");
    gold.append("\npublic formula confirm_mh4_inv_via_m4_inv = (@matrix[1, 2, 3, 4 ~ 5, 6, 7, 8 ~ 9, 10, 11, 12, 0, 0, 0, 1]).inverse();");
    gold.append("\npublic formula m2_inv_inv = m2_inv.inverse();");
    gold.append("\npublic formula m3_inv_inv = m3_inv.inverse();");
    gold.append("\npublic formula m4_inv_inv = m4_inv.inverse();");
    gold.append("\npublic formula mh4_inv_inv = mh4_inv.inverse();");
    gold.append("\n");
    gold.append("\n==========================================================");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport ape.runtime.async.*;");
    gold.append("\nimport ape.runtime.contracts.*;");
    gold.append("\nimport ape.runtime.delta.*;");
    gold.append("\nimport ape.runtime.exceptions.*;");
    gold.append("\nimport ape.runtime.graph.*;");
    gold.append("\nimport ape.runtime.index.*;");
    gold.append("\nimport ape.runtime.json.*;");
    gold.append("\nimport ape.runtime.natives.*;");
    gold.append("\nimport ape.runtime.natives.algo.*;");
    gold.append("\nimport ape.runtime.natives.lists.*;");
    gold.append("\nimport ape.runtime.ops.*;");
    gold.append("\nimport ape.runtime.reactives.*;");
    gold.append("\nimport ape.runtime.reactives.tables.*;");
    gold.append("\nimport ape.runtime.remote.*;");
    gold.append("\nimport ape.runtime.remote.client.*;");
    gold.append("\nimport ape.runtime.remote.replication.*;");
    gold.append("\nimport ape.runtime.stdlib.*;");
    gold.append("\nimport ape.runtime.sys.*;");
    gold.append("\nimport ape.runtime.sys.cron.*;");
    gold.append("\nimport ape.runtime.sys.web.*;");
    gold.append("\nimport ape.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class Math_2 extends LivingDocument {");
    gold.append("\n  private final RxLazy<NtMatrix2> m2xm2;");
    gold.append("\n  private final RxLazy<NtMatrix3> m3xm3;");
    gold.append("\n  private final RxLazy<NtMatrix4> m4_m4;");
    gold.append("\n  private final RxLazy<NtMatrixH4> mh4_mh4;");
    gold.append("\n  private final RxLazy<NtMaybe<NtMatrix2>> m2_inv;");
    gold.append("\n  private final RxLazy<NtMaybe<NtMatrix3>> m3_inv;");
    gold.append("\n  private final RxLazy<NtMaybe<NtMatrix4>> m4_inv;");
    gold.append("\n  private final RxLazy<NtMaybe<NtMatrixH4>> mh4_inv;");
    gold.append("\n  private final RxLazy<NtMaybe<NtMatrix4>> confirm_mh4_inv_via_m4_inv;");
    gold.append("\n  private final RxLazy<NtMaybe<NtMatrix2>> m2_inv_inv;");
    gold.append("\n  private final RxLazy<NtMaybe<NtMatrix3>> m3_inv_inv;");
    gold.append("\n  private final RxLazy<NtMaybe<NtMatrix4>> m4_inv_inv;");
    gold.append("\n  private final RxLazy<NtMaybe<NtMatrixH4>> mh4_inv_inv;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory() + 2176;");
    gold.append("\n    __sum += m2xm2.__memory();");
    gold.append("\n    __sum += m3xm3.__memory();");
    gold.append("\n    __sum += m4_m4.__memory();");
    gold.append("\n    __sum += mh4_mh4.__memory();");
    gold.append("\n    __sum += m2_inv.__memory();");
    gold.append("\n    __sum += m3_inv.__memory();");
    gold.append("\n    __sum += m4_inv.__memory();");
    gold.append("\n    __sum += mh4_inv.__memory();");
    gold.append("\n    __sum += confirm_mh4_inv_via_m4_inv.__memory();");
    gold.append("\n    __sum += m2_inv_inv.__memory();");
    gold.append("\n    __sum += m3_inv_inv.__memory();");
    gold.append("\n    __sum += m4_inv_inv.__memory();");
    gold.append("\n    __sum += mh4_inv_inv.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public Math_2(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    m2xm2 = new RxLazy<NtMatrix2>(this, () -> (NtMatrix2)(LibMatrix.multiply(new NtMatrix2(1, 2, 3, 4), new NtMatrix2(5, 6, 7, 8))), null);");
    gold.append("\n    m3xm3 = new RxLazy<NtMatrix3>(this, () -> (NtMatrix3)(LibMatrix.multiply(new NtMatrix3(1, 2, 3, 4, 5, 6, 7, 8, 9), new NtMatrix3(10, 20, 30, 40, 50, 60, 70, 80, 90))), null);");
    gold.append("\n    m4_m4 = new RxLazy<NtMatrix4>(this, () -> (NtMatrix4)(LibMatrix.multiply(new NtMatrix4(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16), new NtMatrix4(10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160))), null);");
    gold.append("\n    mh4_mh4 = new RxLazy<NtMatrixH4>(this, () -> (NtMatrixH4)(LibMatrix.multiply(new NtMatrixH4(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), new NtMatrixH4(10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120))), null);");
    gold.append("\n    m2_inv = new RxLazy<NtMaybe<NtMatrix2>>(this, () -> (NtMaybe<NtMatrix2>)(LibMatrix.inverse((new NtMatrix2(1, 2, 3, 4)))), null);");
    gold.append("\n    m3_inv = new RxLazy<NtMaybe<NtMatrix3>>(this, () -> (NtMaybe<NtMatrix3>)(LibMatrix.inverse((new NtMatrix3(1, 2, 3, 4, 5, 6, 7, 8, 9)))), null);");
    gold.append("\n    m4_inv = new RxLazy<NtMaybe<NtMatrix4>>(this, () -> (NtMaybe<NtMatrix4>)(LibMatrix.inverse((new NtMatrix4(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16)))), null);");
    gold.append("\n    mh4_inv = new RxLazy<NtMaybe<NtMatrixH4>>(this, () -> (NtMaybe<NtMatrixH4>)(LibMatrix.inverse((new NtMatrixH4(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)))), null);");
    gold.append("\n    confirm_mh4_inv_via_m4_inv = new RxLazy<NtMaybe<NtMatrix4>>(this, () -> (NtMaybe<NtMatrix4>)(LibMatrix.inverse((new NtMatrix4(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 0, 0, 1)))), null);");
    gold.append("\n    m2_inv_inv = new RxLazy<NtMaybe<NtMatrix2>>(this, () -> (NtMaybe<NtMatrix2>)(LibMatrix.inverse2(m2_inv.get())), null);");
    gold.append("\n    m3_inv_inv = new RxLazy<NtMaybe<NtMatrix3>>(this, () -> (NtMaybe<NtMatrix3>)(LibMatrix.inverse3(m3_inv.get())), null);");
    gold.append("\n    m4_inv_inv = new RxLazy<NtMaybe<NtMatrix4>>(this, () -> (NtMaybe<NtMatrix4>)(LibMatrix.inverse4(m4_inv.get())), null);");
    gold.append("\n    mh4_inv_inv = new RxLazy<NtMaybe<NtMatrixH4>>(this, () -> (NtMaybe<NtMatrixH4>)(LibMatrix.inverseH4(mh4_inv.get())), null);");
    gold.append("\n    m2_inv.__subscribe(m2_inv_inv);");
    gold.append("\n    m3_inv.__subscribe(m3_inv_inv);");
    gold.append("\n    m4_inv.__subscribe(m4_inv_inv);");
    gold.append("\n    mh4_inv.__subscribe(mh4_inv_inv);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __settle(Set<Integer> __viewers) {");
    gold.append("\n    m2xm2.__settle(__viewers);");
    gold.append("\n    m3xm3.__settle(__viewers);");
    gold.append("\n    m4_m4.__settle(__viewers);");
    gold.append("\n    mh4_mh4.__settle(__viewers);");
    gold.append("\n    m2_inv.__settle(__viewers);");
    gold.append("\n    m3_inv.__settle(__viewers);");
    gold.append("\n    m4_inv.__settle(__viewers);");
    gold.append("\n    mh4_inv.__settle(__viewers);");
    gold.append("\n    confirm_mh4_inv_via_m4_inv.__settle(__viewers);");
    gold.append("\n    m2_inv_inv.__settle(__viewers);");
    gold.append("\n    m3_inv_inv.__settle(__viewers);");
    gold.append("\n    m4_inv_inv.__settle(__viewers);");
    gold.append("\n    mh4_inv_inv.__settle(__viewers);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            __timezoneCachedZoneId = ZoneId.of(__timezone.get());");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__enqueued\":");
    gold.append("\n            __hydrateEnqueuedTaskManager(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__log\":");
    gold.append("\n            __hydrateLog(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__enqueued\":");
    gold.append("\n            __hydrateEnqueuedTaskManager(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__log\":");
    gold.append("\n            __hydrateLog(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__snapshot\");");
    gold.append("\n    __writer.writeString(__space + \"/\" + __key);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpEnqueuedTaskManager(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __writeRxReport(JsonStreamWriter __writer) { }");
    gold.append("\n  public class DeltaPrivacyCache {");
    gold.append("\n    public DeltaPrivacyCache(NtPrincipal __who) {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaMath_2 implements DeltaNode {");
    gold.append("\n    private int __gm2xm2;");
    gold.append("\n    private DStringProxy __dm2xm2;");
    gold.append("\n    private int __gm3xm3;");
    gold.append("\n    private DStringProxy __dm3xm3;");
    gold.append("\n    private int __gm4_m4;");
    gold.append("\n    private DStringProxy __dm4_m4;");
    gold.append("\n    private int __gmh4_mh4;");
    gold.append("\n    private DStringProxy __dmh4_mh4;");
    gold.append("\n    private int __gm2_inv;");
    gold.append("\n    private DMaybe<DStringProxy> __dm2_inv;");
    gold.append("\n    private int __gm3_inv;");
    gold.append("\n    private DMaybe<DStringProxy> __dm3_inv;");
    gold.append("\n    private int __gm4_inv;");
    gold.append("\n    private DMaybe<DStringProxy> __dm4_inv;");
    gold.append("\n    private int __gmh4_inv;");
    gold.append("\n    private DMaybe<DStringProxy> __dmh4_inv;");
    gold.append("\n    private int __gconfirm_mh4_inv_via_m4_inv;");
    gold.append("\n    private DMaybe<DStringProxy> __dconfirm_mh4_inv_via_m4_inv;");
    gold.append("\n    private int __gm2_inv_inv;");
    gold.append("\n    private DMaybe<DStringProxy> __dm2_inv_inv;");
    gold.append("\n    private int __gm3_inv_inv;");
    gold.append("\n    private DMaybe<DStringProxy> __dm3_inv_inv;");
    gold.append("\n    private int __gm4_inv_inv;");
    gold.append("\n    private DMaybe<DStringProxy> __dm4_inv_inv;");
    gold.append("\n    private int __gmh4_inv_inv;");
    gold.append("\n    private DMaybe<DStringProxy> __dmh4_inv_inv;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaMath_2() {");
    gold.append("\n      __gm2xm2 = -1;");
    gold.append("\n      __dm2xm2 = new DStringProxy();");
    gold.append("\n      __gm3xm3 = -1;");
    gold.append("\n      __dm3xm3 = new DStringProxy();");
    gold.append("\n      __gm4_m4 = -1;");
    gold.append("\n      __dm4_m4 = new DStringProxy();");
    gold.append("\n      __gmh4_mh4 = -1;");
    gold.append("\n      __dmh4_mh4 = new DStringProxy();");
    gold.append("\n      __gm2_inv = -1;");
    gold.append("\n      __dm2_inv = new DMaybe<DStringProxy>();");
    gold.append("\n      __gm3_inv = -1;");
    gold.append("\n      __dm3_inv = new DMaybe<DStringProxy>();");
    gold.append("\n      __gm4_inv = -1;");
    gold.append("\n      __dm4_inv = new DMaybe<DStringProxy>();");
    gold.append("\n      __gmh4_inv = -1;");
    gold.append("\n      __dmh4_inv = new DMaybe<DStringProxy>();");
    gold.append("\n      __gconfirm_mh4_inv_via_m4_inv = -1;");
    gold.append("\n      __dconfirm_mh4_inv_via_m4_inv = new DMaybe<DStringProxy>();");
    gold.append("\n      __gm2_inv_inv = -1;");
    gold.append("\n      __dm2_inv_inv = new DMaybe<DStringProxy>();");
    gold.append("\n      __gm3_inv_inv = -1;");
    gold.append("\n      __dm3_inv_inv = new DMaybe<DStringProxy>();");
    gold.append("\n      __gm4_inv_inv = -1;");
    gold.append("\n      __dm4_inv_inv = new DMaybe<DStringProxy>();");
    gold.append("\n      __gmh4_inv_inv = -1;");
    gold.append("\n      __dmh4_inv_inv = new DMaybe<DStringProxy>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dm2xm2.__memory();");
    gold.append("\n      __sum += __dm3xm3.__memory();");
    gold.append("\n      __sum += __dm4_m4.__memory();");
    gold.append("\n      __sum += __dmh4_mh4.__memory();");
    gold.append("\n      __sum += __dm2_inv.__memory();");
    gold.append("\n      __sum += __dm3_inv.__memory();");
    gold.append("\n      __sum += __dm4_inv.__memory();");
    gold.append("\n      __sum += __dmh4_inv.__memory();");
    gold.append("\n      __sum += __dconfirm_mh4_inv_via_m4_inv.__memory();");
    gold.append("\n      __sum += __dm2_inv_inv.__memory();");
    gold.append("\n      __sum += __dm3_inv_inv.__memory();");
    gold.append("\n      __sum += __dm4_inv_inv.__memory();");
    gold.append("\n      __sum += __dmh4_inv_inv.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public boolean show(Math_2 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      DeltaPrivacyCache __policy_cache = new DeltaPrivacyCache(__writer.who);");
    gold.append("\n      __writer.setCacheObject(__policy_cache);");
    gold.append("\n      __code_cost += 13;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__gm2xm2 != __item.m2xm2.getGeneration()) {");
    gold.append("\n        __dm2xm2.show(__item.m2xm2.get(), __obj.planField(\"m2xm2\"));");
    gold.append("\n        __gm2xm2 = __item.m2xm2.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gm3xm3 != __item.m3xm3.getGeneration()) {");
    gold.append("\n        __dm3xm3.show(__item.m3xm3.get(), __obj.planField(\"m3xm3\"));");
    gold.append("\n        __gm3xm3 = __item.m3xm3.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gm4_m4 != __item.m4_m4.getGeneration()) {");
    gold.append("\n        __dm4_m4.show(__item.m4_m4.get(), __obj.planField(\"m4_m4\"));");
    gold.append("\n        __gm4_m4 = __item.m4_m4.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gmh4_mh4 != __item.mh4_mh4.getGeneration()) {");
    gold.append("\n        __dmh4_mh4.show(__item.mh4_mh4.get(), __obj.planField(\"mh4_mh4\"));");
    gold.append("\n        __gmh4_mh4 = __item.mh4_mh4.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gm2_inv != __item.m2_inv.getGeneration()) {");
    gold.append("\n        if (__item.m2_inv.get().has()) {");
    gold.append("\n          NtMatrix2 __maybeElement0 = (NtMatrix2)(__item.m2_inv.get().get());");
    gold.append("\n          DStringProxy __maybeDeltaElement1 = __dm2_inv.get(() -> new DStringProxy());");
    gold.append("\n          __maybeDeltaElement1.show(__maybeElement0, __obj.planField(\"m2_inv\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dm2_inv.hide(__obj.planField(\"m2_inv\"));");
    gold.append("\n        }");
    gold.append("\n        __gm2_inv = __item.m2_inv.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gm3_inv != __item.m3_inv.getGeneration()) {");
    gold.append("\n        if (__item.m3_inv.get().has()) {");
    gold.append("\n          NtMatrix3 __maybeElement2 = (NtMatrix3)(__item.m3_inv.get().get());");
    gold.append("\n          DStringProxy __maybeDeltaElement3 = __dm3_inv.get(() -> new DStringProxy());");
    gold.append("\n          __maybeDeltaElement3.show(__maybeElement2, __obj.planField(\"m3_inv\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dm3_inv.hide(__obj.planField(\"m3_inv\"));");
    gold.append("\n        }");
    gold.append("\n        __gm3_inv = __item.m3_inv.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gm4_inv != __item.m4_inv.getGeneration()) {");
    gold.append("\n        if (__item.m4_inv.get().has()) {");
    gold.append("\n          NtMatrix4 __maybeElement4 = (NtMatrix4)(__item.m4_inv.get().get());");
    gold.append("\n          DStringProxy __maybeDeltaElement5 = __dm4_inv.get(() -> new DStringProxy());");
    gold.append("\n          __maybeDeltaElement5.show(__maybeElement4, __obj.planField(\"m4_inv\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dm4_inv.hide(__obj.planField(\"m4_inv\"));");
    gold.append("\n        }");
    gold.append("\n        __gm4_inv = __item.m4_inv.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gmh4_inv != __item.mh4_inv.getGeneration()) {");
    gold.append("\n        if (__item.mh4_inv.get().has()) {");
    gold.append("\n          NtMatrixH4 __maybeElement6 = (NtMatrixH4)(__item.mh4_inv.get().get());");
    gold.append("\n          DStringProxy __maybeDeltaElement7 = __dmh4_inv.get(() -> new DStringProxy());");
    gold.append("\n          __maybeDeltaElement7.show(__maybeElement6, __obj.planField(\"mh4_inv\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dmh4_inv.hide(__obj.planField(\"mh4_inv\"));");
    gold.append("\n        }");
    gold.append("\n        __gmh4_inv = __item.mh4_inv.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gconfirm_mh4_inv_via_m4_inv != __item.confirm_mh4_inv_via_m4_inv.getGeneration()) {");
    gold.append("\n        if (__item.confirm_mh4_inv_via_m4_inv.get().has()) {");
    gold.append("\n          NtMatrix4 __maybeElement8 = (NtMatrix4)(__item.confirm_mh4_inv_via_m4_inv.get().get());");
    gold.append("\n          DStringProxy __maybeDeltaElement9 = __dconfirm_mh4_inv_via_m4_inv.get(() -> new DStringProxy());");
    gold.append("\n          __maybeDeltaElement9.show(__maybeElement8, __obj.planField(\"confirm_mh4_inv_via_m4_inv\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dconfirm_mh4_inv_via_m4_inv.hide(__obj.planField(\"confirm_mh4_inv_via_m4_inv\"));");
    gold.append("\n        }");
    gold.append("\n        __gconfirm_mh4_inv_via_m4_inv = __item.confirm_mh4_inv_via_m4_inv.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gm2_inv_inv != __item.m2_inv_inv.getGeneration()) {");
    gold.append("\n        if (__item.m2_inv_inv.get().has()) {");
    gold.append("\n          NtMatrix2 __maybeElement10 = (NtMatrix2)(__item.m2_inv_inv.get().get());");
    gold.append("\n          DStringProxy __maybeDeltaElement11 = __dm2_inv_inv.get(() -> new DStringProxy());");
    gold.append("\n          __maybeDeltaElement11.show(__maybeElement10, __obj.planField(\"m2_inv_inv\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dm2_inv_inv.hide(__obj.planField(\"m2_inv_inv\"));");
    gold.append("\n        }");
    gold.append("\n        __gm2_inv_inv = __item.m2_inv_inv.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gm3_inv_inv != __item.m3_inv_inv.getGeneration()) {");
    gold.append("\n        if (__item.m3_inv_inv.get().has()) {");
    gold.append("\n          NtMatrix3 __maybeElement12 = (NtMatrix3)(__item.m3_inv_inv.get().get());");
    gold.append("\n          DStringProxy __maybeDeltaElement13 = __dm3_inv_inv.get(() -> new DStringProxy());");
    gold.append("\n          __maybeDeltaElement13.show(__maybeElement12, __obj.planField(\"m3_inv_inv\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dm3_inv_inv.hide(__obj.planField(\"m3_inv_inv\"));");
    gold.append("\n        }");
    gold.append("\n        __gm3_inv_inv = __item.m3_inv_inv.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gm4_inv_inv != __item.m4_inv_inv.getGeneration()) {");
    gold.append("\n        if (__item.m4_inv_inv.get().has()) {");
    gold.append("\n          NtMatrix4 __maybeElement14 = (NtMatrix4)(__item.m4_inv_inv.get().get());");
    gold.append("\n          DStringProxy __maybeDeltaElement15 = __dm4_inv_inv.get(() -> new DStringProxy());");
    gold.append("\n          __maybeDeltaElement15.show(__maybeElement14, __obj.planField(\"m4_inv_inv\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dm4_inv_inv.hide(__obj.planField(\"m4_inv_inv\"));");
    gold.append("\n        }");
    gold.append("\n        __gm4_inv_inv = __item.m4_inv_inv.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gmh4_inv_inv != __item.mh4_inv_inv.getGeneration()) {");
    gold.append("\n        if (__item.mh4_inv_inv.get().has()) {");
    gold.append("\n          NtMatrixH4 __maybeElement16 = (NtMatrixH4)(__item.mh4_inv_inv.get().get());");
    gold.append("\n          DStringProxy __maybeDeltaElement17 = __dmh4_inv_inv.get(() -> new DStringProxy());");
    gold.append("\n          __maybeDeltaElement17.show(__maybeElement16, __obj.planField(\"mh4_inv_inv\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dmh4_inv_inv.hide(__obj.planField(\"mh4_inv_inv\"));");
    gold.append("\n        }");
    gold.append("\n        __gmh4_inv_inv = __item.mh4_inv_inv.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n      return true;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dm2xm2.clear();");
    gold.append("\n      __dm3xm3.clear();");
    gold.append("\n      __dm4_m4.clear();");
    gold.append("\n      __dmh4_mh4.clear();");
    gold.append("\n      __dm2_inv.clear();");
    gold.append("\n      __dm3_inv.clear();");
    gold.append("\n      __dm4_inv.clear();");
    gold.append("\n      __dmh4_inv.clear();");
    gold.append("\n      __dconfirm_mh4_inv_via_m4_inv.clear();");
    gold.append("\n      __dm2_inv_inv.clear();");
    gold.append("\n      __dm3_inv_inv.clear();");
    gold.append("\n      __dm4_inv_inv.clear();");
    gold.append("\n      __dmh4_inv_inv.clear();");
    gold.append("\n      __code_cost += 13;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective) {");
    gold.append("\n    Math_2 __self = this;");
    gold.append("\n    DeltaMath_2 __state = new DeltaMath_2();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    int __viewId = __genViewId();");
    gold.append("\n    return new PrivateView(__viewId, __who, ___perspective) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __viewId));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() { return 64; }");
    gold.append("\n    public void __reset() {}");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __parsed() throws AbortMessageException {}");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  public static void __create_generic_clients(ServiceRegistry __registry, HeaderDecryptor decryptor) throws Exception {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public Service __findService(String __name) { return null; }");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext context, String channel, Object __message) throws AbortMessageException {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __metrics() { return \"{}\"; }");
    gold.append("\n  @Override");
    gold.append("\n  public String __traffic(CoreRequestContext __context) { return \"\"; }");
    gold.append("\n  @Override");
    gold.append("\n  public void __debug(JsonStreamWriter __writer) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected long __computeGraphs() { return 0; }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  public AuthResponse __authpipe(CoreRequestContext __context, String __message) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __make_cron_progress() {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_cron() {}");
    gold.append("\n  @Override");
    gold.append("\n  public Long __predict_cron_wake_time() { return null; }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(CoreRequestContext __context, WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(CoreRequestContext __context, WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(CoreRequestContext __context, WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(CoreRequestContext __context, WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) throws AbortMessageException {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext _c, NtMessageBase _m) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--=[LivingDocumentFactory COMPILING]=---");
    gold.append("\n--=[LivingDocumentFactory MADE]=---");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"m2xm2\":{\"type\":{\"nature\":\"native_value\",\"type\":\"matrix2\"},\"computed\":true,\"privacy\":\"public\"},\"m3xm3\":{\"type\":{\"nature\":\"native_value\",\"type\":\"matrix3\"},\"computed\":true,\"privacy\":\"public\"},\"m4_m4\":{\"type\":{\"nature\":\"native_value\",\"type\":\"matrix4\"},\"computed\":true,\"privacy\":\"public\"},\"mh4_mh4\":{\"type\":{\"nature\":\"native_value\",\"type\":\"matrixh4\"},\"computed\":true,\"privacy\":\"public\"},\"m2_inv\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"matrix2\"}},\"computed\":true,\"privacy\":\"public\"},\"m3_inv\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"matrix3\"}},\"computed\":true,\"privacy\":\"public\"},\"m4_inv\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"matrix4\"}},\"computed\":true,\"privacy\":\"public\"},\"mh4_inv\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"matrixh4\"}},\"computed\":true,\"privacy\":\"public\"},\"confirm_mh4_inv_via_m4_inv\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"matrix4\"}},\"computed\":true,\"privacy\":\"public\"},\"m2_inv_inv\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"matrix2\"}},\"computed\":true,\"privacy\":\"public\"},\"m3_inv_inv\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"matrix3\"}},\"computed\":true,\"privacy\":\"public\"},\"m4_inv_inv\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"matrix4\"}},\"computed\":true,\"privacy\":\"public\"},\"mh4_inv_inv\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"matrixh4\"}},\"computed\":true,\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}}},\"channels\":{},\"channels-privacy\":{},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:0");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:3080");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:0");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"m2xm2\":\"19.0|22.0|43.0|50.0\",\"m3xm3\":\"300.0|360.0|420.0|660.0|810.0|960.0|1020.0|1260.0|1500.0\",\"m4_m4\":\"900.0|1000.0|1100.0|1200.0|2020.0|2280.0|2540.0|2800.0|3140.0|3560.0|3980.0|4400.0|4260.0|4840.0|5420.0|6000.0\",\"mh4_mh4\":\"380.0|440.0|500.0|564.0|980.0|1160.0|1340.0|1528.0|1580.0|1880.0|2180.0|2492.0\",\"m2_inv\":\"-2.0|1.0|1.5|-0.5\",\"m2_inv_inv\":\"1.0|2.0|3.0|4.0\"},\"seq\":3}");
    gold.append("\nNO_ONE|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"75\"} need:false in:0");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"m2xm2\":\"19.0|22.0|43.0|50.0\",\"m3xm3\":\"300.0|360.0|420.0|660.0|810.0|960.0|1020.0|1260.0|1500.0\",\"m4_m4\":\"900.0|1000.0|1100.0|1200.0|2020.0|2280.0|2540.0|2800.0|3140.0|3560.0|3980.0|4400.0|4260.0|4840.0|5420.0|6000.0\",\"mh4_mh4\":\"380.0|440.0|500.0|564.0|980.0|1160.0|1340.0|1528.0|1580.0|1880.0|2180.0|2492.0\",\"m2_inv\":\"-2.0|1.0|1.5|-0.5\",\"m2_inv_inv\":\"1.0|2.0|3.0|4.0\"},\"seq\":4}");
    gold.append("\nRANDO|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__time\":\"100\"} need:false in:0");
    gold.append("\nRANDO|SUCCESS:5");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n+ RANDO DELTA:{\"seq\":5}");
    gold.append("\nMEMORY:5966");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"__snapshot\":\"0/0\",\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{}");
    gold.append("\n--METRIC RESULTS-----------------------------------");
    gold.append("\n{\"__snapshot\":\"0/0\",\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"__snapshot\":\"0/0\",\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_Special_3 = null;
  private String get_Special_3() {
    if (cached_Special_3 != null) {
      return cached_Special_3;
    }
    cached_Special_3 = generateTestOutput(true, "Special_3", "./test_code/Matrix_Special_success.a");
    return cached_Special_3;
  }

  @Test
  public void testSpecialEmission() {
    assertEmissionGood(get_Special_3());
  }

  @Test
  public void testSpecialSuccess() {
    assertLivePass(get_Special_3());
  }

  @Test
  public void testSpecialNoFormatException() {
    assertNoFormatException(get_Special_3());
  }

  @Test
  public void testSpecialGoodWillHappy() {
    assertGoodWillHappy(get_Special_3());
  }

  @Test
  public void testSpecialExceptionFree() {
    assertExceptionFree(get_Special_3());
  }

  @Test
  public void testSpecialTODOFree() {
    assertTODOFree(get_Special_3());
  }

  @Test
  public void stable_Special_3() {
    String live = get_Special_3();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Matrix_Special_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n=FORMAT===================================================");
    gold.append("\n public formula rot45 = (@pi / 4).to_rotation();");
    gold.append("\npublic formula rot45_x = (@pi / 4).to_rotation_x();");
    gold.append("\npublic formula rot45_y = (@pi / 4).to_rotation_y();");
    gold.append("\npublic formula rot45_z = (@pi / 4).to_rotation_z();");
    gold.append("\npublic formula rot45_around = (@pi / 4).to_rotation_around(@vec [1, 2, 3]);");
    gold.append("\npublic formula rot45_by = (@vec[1, 2, 3]).rotate_around(@pi / 4);");
    gold.append("\n");
    gold.append("\n==========================================================");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport ape.runtime.async.*;");
    gold.append("\nimport ape.runtime.contracts.*;");
    gold.append("\nimport ape.runtime.delta.*;");
    gold.append("\nimport ape.runtime.exceptions.*;");
    gold.append("\nimport ape.runtime.graph.*;");
    gold.append("\nimport ape.runtime.index.*;");
    gold.append("\nimport ape.runtime.json.*;");
    gold.append("\nimport ape.runtime.natives.*;");
    gold.append("\nimport ape.runtime.natives.algo.*;");
    gold.append("\nimport ape.runtime.natives.lists.*;");
    gold.append("\nimport ape.runtime.ops.*;");
    gold.append("\nimport ape.runtime.reactives.*;");
    gold.append("\nimport ape.runtime.reactives.tables.*;");
    gold.append("\nimport ape.runtime.remote.*;");
    gold.append("\nimport ape.runtime.remote.client.*;");
    gold.append("\nimport ape.runtime.remote.replication.*;");
    gold.append("\nimport ape.runtime.stdlib.*;");
    gold.append("\nimport ape.runtime.sys.*;");
    gold.append("\nimport ape.runtime.sys.cron.*;");
    gold.append("\nimport ape.runtime.sys.web.*;");
    gold.append("\nimport ape.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class Special_3 extends LivingDocument {");
    gold.append("\n  private final RxLazy<NtMaybe<NtMatrix2>> rot45;");
    gold.append("\n  private final RxLazy<NtMaybe<NtMatrix3>> rot45_x;");
    gold.append("\n  private final RxLazy<NtMaybe<NtMatrix3>> rot45_y;");
    gold.append("\n  private final RxLazy<NtMaybe<NtMatrix3>> rot45_z;");
    gold.append("\n  private final RxLazy<NtMaybe<NtMatrix3>> rot45_around;");
    gold.append("\n  private final RxLazy<NtMaybe<NtMatrix3>> rot45_by;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory() + 2176;");
    gold.append("\n    __sum += rot45.__memory();");
    gold.append("\n    __sum += rot45_x.__memory();");
    gold.append("\n    __sum += rot45_y.__memory();");
    gold.append("\n    __sum += rot45_z.__memory();");
    gold.append("\n    __sum += rot45_around.__memory();");
    gold.append("\n    __sum += rot45_by.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public Special_3(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    rot45 = new RxLazy<NtMaybe<NtMatrix2>>(this, () -> (NtMaybe<NtMatrix2>)(LibMatrix.to_rotation((LibArithmetic.Divide.DI(3.141592653589793, 4)))), null);");
    gold.append("\n    rot45_x = new RxLazy<NtMaybe<NtMatrix3>>(this, () -> (NtMaybe<NtMatrix3>)(LibMatrix.to_rotation_x((LibArithmetic.Divide.DI(3.141592653589793, 4)))), null);");
    gold.append("\n    rot45_y = new RxLazy<NtMaybe<NtMatrix3>>(this, () -> (NtMaybe<NtMatrix3>)(LibMatrix.to_rotation_y((LibArithmetic.Divide.DI(3.141592653589793, 4)))), null);");
    gold.append("\n    rot45_z = new RxLazy<NtMaybe<NtMatrix3>>(this, () -> (NtMaybe<NtMatrix3>)(LibMatrix.to_rotation_z((LibArithmetic.Divide.DI(3.141592653589793, 4)))), null);");
    gold.append("\n    rot45_around = new RxLazy<NtMaybe<NtMatrix3>>(this, () -> (NtMaybe<NtMatrix3>)(LibMatrix.to_rotation_around((LibArithmetic.Divide.DI(3.141592653589793, 4)), new NtVec3(1, 2, 3))), null);");
    gold.append("\n    rot45_by = new RxLazy<NtMaybe<NtMatrix3>>(this, () -> (NtMaybe<NtMatrix3>)(LibMatrix.rotate_around((new NtVec3(1, 2, 3)), LibArithmetic.Divide.DI(3.141592653589793, 4))), null);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __settle(Set<Integer> __viewers) {");
    gold.append("\n    rot45.__settle(__viewers);");
    gold.append("\n    rot45_x.__settle(__viewers);");
    gold.append("\n    rot45_y.__settle(__viewers);");
    gold.append("\n    rot45_z.__settle(__viewers);");
    gold.append("\n    rot45_around.__settle(__viewers);");
    gold.append("\n    rot45_by.__settle(__viewers);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            __timezoneCachedZoneId = ZoneId.of(__timezone.get());");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__enqueued\":");
    gold.append("\n            __hydrateEnqueuedTaskManager(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__log\":");
    gold.append("\n            __hydrateLog(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__enqueued\":");
    gold.append("\n            __hydrateEnqueuedTaskManager(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__log\":");
    gold.append("\n            __hydrateLog(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__snapshot\");");
    gold.append("\n    __writer.writeString(__space + \"/\" + __key);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpEnqueuedTaskManager(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __writeRxReport(JsonStreamWriter __writer) { }");
    gold.append("\n  public class DeltaPrivacyCache {");
    gold.append("\n    public DeltaPrivacyCache(NtPrincipal __who) {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaSpecial_3 implements DeltaNode {");
    gold.append("\n    private int __grot45;");
    gold.append("\n    private DMaybe<DStringProxy> __drot45;");
    gold.append("\n    private int __grot45_x;");
    gold.append("\n    private DMaybe<DStringProxy> __drot45_x;");
    gold.append("\n    private int __grot45_y;");
    gold.append("\n    private DMaybe<DStringProxy> __drot45_y;");
    gold.append("\n    private int __grot45_z;");
    gold.append("\n    private DMaybe<DStringProxy> __drot45_z;");
    gold.append("\n    private int __grot45_around;");
    gold.append("\n    private DMaybe<DStringProxy> __drot45_around;");
    gold.append("\n    private int __grot45_by;");
    gold.append("\n    private DMaybe<DStringProxy> __drot45_by;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaSpecial_3() {");
    gold.append("\n      __grot45 = -1;");
    gold.append("\n      __drot45 = new DMaybe<DStringProxy>();");
    gold.append("\n      __grot45_x = -1;");
    gold.append("\n      __drot45_x = new DMaybe<DStringProxy>();");
    gold.append("\n      __grot45_y = -1;");
    gold.append("\n      __drot45_y = new DMaybe<DStringProxy>();");
    gold.append("\n      __grot45_z = -1;");
    gold.append("\n      __drot45_z = new DMaybe<DStringProxy>();");
    gold.append("\n      __grot45_around = -1;");
    gold.append("\n      __drot45_around = new DMaybe<DStringProxy>();");
    gold.append("\n      __grot45_by = -1;");
    gold.append("\n      __drot45_by = new DMaybe<DStringProxy>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __drot45.__memory();");
    gold.append("\n      __sum += __drot45_x.__memory();");
    gold.append("\n      __sum += __drot45_y.__memory();");
    gold.append("\n      __sum += __drot45_z.__memory();");
    gold.append("\n      __sum += __drot45_around.__memory();");
    gold.append("\n      __sum += __drot45_by.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public boolean show(Special_3 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      DeltaPrivacyCache __policy_cache = new DeltaPrivacyCache(__writer.who);");
    gold.append("\n      __writer.setCacheObject(__policy_cache);");
    gold.append("\n      __code_cost += 6;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__grot45 != __item.rot45.getGeneration()) {");
    gold.append("\n        if (__item.rot45.get().has()) {");
    gold.append("\n          NtMatrix2 __maybeElement0 = (NtMatrix2)(__item.rot45.get().get());");
    gold.append("\n          DStringProxy __maybeDeltaElement1 = __drot45.get(() -> new DStringProxy());");
    gold.append("\n          __maybeDeltaElement1.show(__maybeElement0, __obj.planField(\"rot45\"));");
    gold.append("\n        } else {");
    gold.append("\n          __drot45.hide(__obj.planField(\"rot45\"));");
    gold.append("\n        }");
    gold.append("\n        __grot45 = __item.rot45.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__grot45_x != __item.rot45_x.getGeneration()) {");
    gold.append("\n        if (__item.rot45_x.get().has()) {");
    gold.append("\n          NtMatrix3 __maybeElement2 = (NtMatrix3)(__item.rot45_x.get().get());");
    gold.append("\n          DStringProxy __maybeDeltaElement3 = __drot45_x.get(() -> new DStringProxy());");
    gold.append("\n          __maybeDeltaElement3.show(__maybeElement2, __obj.planField(\"rot45_x\"));");
    gold.append("\n        } else {");
    gold.append("\n          __drot45_x.hide(__obj.planField(\"rot45_x\"));");
    gold.append("\n        }");
    gold.append("\n        __grot45_x = __item.rot45_x.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__grot45_y != __item.rot45_y.getGeneration()) {");
    gold.append("\n        if (__item.rot45_y.get().has()) {");
    gold.append("\n          NtMatrix3 __maybeElement4 = (NtMatrix3)(__item.rot45_y.get().get());");
    gold.append("\n          DStringProxy __maybeDeltaElement5 = __drot45_y.get(() -> new DStringProxy());");
    gold.append("\n          __maybeDeltaElement5.show(__maybeElement4, __obj.planField(\"rot45_y\"));");
    gold.append("\n        } else {");
    gold.append("\n          __drot45_y.hide(__obj.planField(\"rot45_y\"));");
    gold.append("\n        }");
    gold.append("\n        __grot45_y = __item.rot45_y.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__grot45_z != __item.rot45_z.getGeneration()) {");
    gold.append("\n        if (__item.rot45_z.get().has()) {");
    gold.append("\n          NtMatrix3 __maybeElement6 = (NtMatrix3)(__item.rot45_z.get().get());");
    gold.append("\n          DStringProxy __maybeDeltaElement7 = __drot45_z.get(() -> new DStringProxy());");
    gold.append("\n          __maybeDeltaElement7.show(__maybeElement6, __obj.planField(\"rot45_z\"));");
    gold.append("\n        } else {");
    gold.append("\n          __drot45_z.hide(__obj.planField(\"rot45_z\"));");
    gold.append("\n        }");
    gold.append("\n        __grot45_z = __item.rot45_z.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__grot45_around != __item.rot45_around.getGeneration()) {");
    gold.append("\n        if (__item.rot45_around.get().has()) {");
    gold.append("\n          NtMatrix3 __maybeElement8 = (NtMatrix3)(__item.rot45_around.get().get());");
    gold.append("\n          DStringProxy __maybeDeltaElement9 = __drot45_around.get(() -> new DStringProxy());");
    gold.append("\n          __maybeDeltaElement9.show(__maybeElement8, __obj.planField(\"rot45_around\"));");
    gold.append("\n        } else {");
    gold.append("\n          __drot45_around.hide(__obj.planField(\"rot45_around\"));");
    gold.append("\n        }");
    gold.append("\n        __grot45_around = __item.rot45_around.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__grot45_by != __item.rot45_by.getGeneration()) {");
    gold.append("\n        if (__item.rot45_by.get().has()) {");
    gold.append("\n          NtMatrix3 __maybeElement10 = (NtMatrix3)(__item.rot45_by.get().get());");
    gold.append("\n          DStringProxy __maybeDeltaElement11 = __drot45_by.get(() -> new DStringProxy());");
    gold.append("\n          __maybeDeltaElement11.show(__maybeElement10, __obj.planField(\"rot45_by\"));");
    gold.append("\n        } else {");
    gold.append("\n          __drot45_by.hide(__obj.planField(\"rot45_by\"));");
    gold.append("\n        }");
    gold.append("\n        __grot45_by = __item.rot45_by.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n      return true;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __drot45.clear();");
    gold.append("\n      __drot45_x.clear();");
    gold.append("\n      __drot45_y.clear();");
    gold.append("\n      __drot45_z.clear();");
    gold.append("\n      __drot45_around.clear();");
    gold.append("\n      __drot45_by.clear();");
    gold.append("\n      __code_cost += 6;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective) {");
    gold.append("\n    Special_3 __self = this;");
    gold.append("\n    DeltaSpecial_3 __state = new DeltaSpecial_3();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    int __viewId = __genViewId();");
    gold.append("\n    return new PrivateView(__viewId, __who, ___perspective) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __viewId));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() { return 64; }");
    gold.append("\n    public void __reset() {}");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __parsed() throws AbortMessageException {}");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  public static void __create_generic_clients(ServiceRegistry __registry, HeaderDecryptor decryptor) throws Exception {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public Service __findService(String __name) { return null; }");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext context, String channel, Object __message) throws AbortMessageException {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __metrics() { return \"{}\"; }");
    gold.append("\n  @Override");
    gold.append("\n  public String __traffic(CoreRequestContext __context) { return \"\"; }");
    gold.append("\n  @Override");
    gold.append("\n  public void __debug(JsonStreamWriter __writer) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected long __computeGraphs() { return 0; }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  public AuthResponse __authpipe(CoreRequestContext __context, String __message) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __make_cron_progress() {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_cron() {}");
    gold.append("\n  @Override");
    gold.append("\n  public Long __predict_cron_wake_time() { return null; }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(CoreRequestContext __context, WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(CoreRequestContext __context, WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(CoreRequestContext __context, WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(CoreRequestContext __context, WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) throws AbortMessageException {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext _c, NtMessageBase _m) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--=[LivingDocumentFactory COMPILING]=---");
    gold.append("\n--=[LivingDocumentFactory MADE]=---");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"rot45\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"matrix2\"}},\"computed\":true,\"privacy\":\"public\"},\"rot45_x\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"matrix3\"}},\"computed\":true,\"privacy\":\"public\"},\"rot45_y\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"matrix3\"}},\"computed\":true,\"privacy\":\"public\"},\"rot45_z\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"matrix3\"}},\"computed\":true,\"privacy\":\"public\"},\"rot45_around\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"matrix3\"}},\"computed\":true,\"privacy\":\"public\"},\"rot45_by\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"matrix3\"}},\"computed\":true,\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}}},\"channels\":{},\"channels-privacy\":{},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:0");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:2800");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:0");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"rot45\":\"0.7071067811865476|-0.7071067811865475|0.7071067811865475|0.7071067811865476\",\"rot45_x\":\"1.0|0.0|0.0|0.0|0.7071067811865476|-0.7071067811865475|0.0|0.7071067811865475|0.7071067811865476\",\"rot45_y\":\"0.7071067811865476|0.0|0.7071067811865475|0.0|1.0|0.0|-0.7071067811865475|0.0|0.7071067811865476\",\"rot45_z\":\"0.7071067811865476|-0.7071067811865475|0.0|0.7071067811865475|0.7071067811865476|0.0|0.0|0.0|1.0\",\"rot45_around\":\"0.7280277253875085|-0.525104821111919|0.4407273056121099|0.6087885979157627|0.7907905579903911|-0.06345657129884827|-0.3152016404063445|0.3145079017103789|0.8953952789951956\",\"rot45_by\":\"0.7280277253875085|-0.525104821111919|0.4407273056121099|0.6087885979157627|0.7907905579903911|-0.06345657129884827|-0.3152016404063445|0.3145079017103789|0.8953952789951956\"},\"seq\":3}");
    gold.append("\nNO_ONE|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"75\"} need:false in:0");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"rot45\":\"0.7071067811865476|-0.7071067811865475|0.7071067811865475|0.7071067811865476\",\"rot45_x\":\"1.0|0.0|0.0|0.0|0.7071067811865476|-0.7071067811865475|0.0|0.7071067811865475|0.7071067811865476\",\"rot45_y\":\"0.7071067811865476|0.0|0.7071067811865475|0.0|1.0|0.0|-0.7071067811865475|0.0|0.7071067811865476\",\"rot45_z\":\"0.7071067811865476|-0.7071067811865475|0.0|0.7071067811865475|0.7071067811865476|0.0|0.0|0.0|1.0\",\"rot45_around\":\"0.7280277253875085|-0.525104821111919|0.4407273056121099|0.6087885979157627|0.7907905579903911|-0.06345657129884827|-0.3152016404063445|0.3145079017103789|0.8953952789951956\",\"rot45_by\":\"0.7280277253875085|-0.525104821111919|0.4407273056121099|0.6087885979157627|0.7907905579903911|-0.06345657129884827|-0.3152016404063445|0.3145079017103789|0.8953952789951956\"},\"seq\":4}");
    gold.append("\nRANDO|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__time\":\"100\"} need:false in:0");
    gold.append("\nRANDO|SUCCESS:5");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n+ RANDO DELTA:{\"seq\":5}");
    gold.append("\nMEMORY:5446");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"__snapshot\":\"0/0\",\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{}");
    gold.append("\n--METRIC RESULTS-----------------------------------");
    gold.append("\n{\"__snapshot\":\"0/0\",\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"__snapshot\":\"0/0\",\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_Usage_4 = null;
  private String get_Usage_4() {
    if (cached_Usage_4 != null) {
      return cached_Usage_4;
    }
    cached_Usage_4 = generateTestOutput(true, "Usage_4", "./test_code/Matrix_Usage_success.a");
    return cached_Usage_4;
  }

  @Test
  public void testUsageEmission() {
    assertEmissionGood(get_Usage_4());
  }

  @Test
  public void testUsageSuccess() {
    assertLivePass(get_Usage_4());
  }

  @Test
  public void testUsageNoFormatException() {
    assertNoFormatException(get_Usage_4());
  }

  @Test
  public void testUsageGoodWillHappy() {
    assertGoodWillHappy(get_Usage_4());
  }

  @Test
  public void testUsageExceptionFree() {
    assertExceptionFree(get_Usage_4());
  }

  @Test
  public void testUsageTODOFree() {
    assertTODOFree(get_Usage_4());
  }

  @Test
  public void stable_Usage_4() {
    String live = get_Usage_4();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Matrix_Usage_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n=FORMAT===================================================");
    gold.append("\npublic matrix2 m2_r;");
    gold.append("\npublic matrix3 m3_r;");
    gold.append("\npublic matrix4 m4_r;");
    gold.append("\npublic matrixh4 mh4_r;");
    gold.append("\n#nc {");
    gold.append("\n  matrix2 m2_n;");
    gold.append("\n  matrix3 m3_n;");
    gold.append("\n  matrix4 m4_n;");
    gold.append("\n  matrixh4 mh4_n;");
    gold.append("\n}");
    gold.append("\n@construct {");
    gold.append("\n  m2_r = @matrix [1, 2, 3, 4];");
    gold.append("\n  m3_r = @matrix [0.1, 0.2, 0.3 ~ 0.4, 0.5, 0.6 ~ 0.7, 0.8, 0.9 ];");
    gold.append("\n  m4_r = @matrix [ 10, 20, 30, 40 ~ 50, 60, 70, 80 ~ 90,100,110,120 ~ 130,140,150,160 ];");
    gold.append("\n  mh4_r = @matrix [ 100, 200, 300, 400 ~ 500, 600, 700, 800 ~ 900,1000,1100,1200];");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n==========================================================");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport ape.runtime.async.*;");
    gold.append("\nimport ape.runtime.contracts.*;");
    gold.append("\nimport ape.runtime.delta.*;");
    gold.append("\nimport ape.runtime.exceptions.*;");
    gold.append("\nimport ape.runtime.graph.*;");
    gold.append("\nimport ape.runtime.index.*;");
    gold.append("\nimport ape.runtime.json.*;");
    gold.append("\nimport ape.runtime.natives.*;");
    gold.append("\nimport ape.runtime.natives.algo.*;");
    gold.append("\nimport ape.runtime.natives.lists.*;");
    gold.append("\nimport ape.runtime.ops.*;");
    gold.append("\nimport ape.runtime.reactives.*;");
    gold.append("\nimport ape.runtime.reactives.tables.*;");
    gold.append("\nimport ape.runtime.remote.*;");
    gold.append("\nimport ape.runtime.remote.client.*;");
    gold.append("\nimport ape.runtime.remote.replication.*;");
    gold.append("\nimport ape.runtime.stdlib.*;");
    gold.append("\nimport ape.runtime.sys.*;");
    gold.append("\nimport ape.runtime.sys.cron.*;");
    gold.append("\nimport ape.runtime.sys.web.*;");
    gold.append("\nimport ape.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class Usage_4 extends LivingDocument {");
    gold.append("\n  private final RxMatrix2 m2_r;");
    gold.append("\n  private final RxMatrix3 m3_r;");
    gold.append("\n  private final RxMatrix4 m4_r;");
    gold.append("\n  private final RxMatrixH4 mh4_r;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory() + 2176;");
    gold.append("\n    __sum += m2_r.__memory();");
    gold.append("\n    __sum += m3_r.__memory();");
    gold.append("\n    __sum += m4_r.__memory();");
    gold.append("\n    __sum += mh4_r.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public Usage_4(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    m2_r = new RxMatrix2(this, new NtMatrix2(1.0, 0.0, 0.0, 1.0));");
    gold.append("\n    m3_r = new RxMatrix3(this, new NtMatrix3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0));");
    gold.append("\n    m4_r = new RxMatrix4(this, new NtMatrix4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0));");
    gold.append("\n    mh4_r = new RxMatrixH4(this, new NtMatrixH4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0));");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __settle(Set<Integer> __viewers) {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"m2_r\":");
    gold.append("\n            m2_r.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"m3_r\":");
    gold.append("\n            m3_r.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"m4_r\":");
    gold.append("\n            m4_r.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"mh4_r\":");
    gold.append("\n            mh4_r.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            __timezoneCachedZoneId = ZoneId.of(__timezone.get());");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__enqueued\":");
    gold.append("\n            __hydrateEnqueuedTaskManager(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__log\":");
    gold.append("\n            __hydrateLog(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"m2_r\":");
    gold.append("\n            m2_r.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"m3_r\":");
    gold.append("\n            m3_r.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"m4_r\":");
    gold.append("\n            m4_r.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"mh4_r\":");
    gold.append("\n            mh4_r.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__enqueued\":");
    gold.append("\n            __hydrateEnqueuedTaskManager(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__log\":");
    gold.append("\n            __hydrateLog(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__snapshot\");");
    gold.append("\n    __writer.writeString(__space + \"/\" + __key);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"m2_r\");");
    gold.append("\n    m2_r.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"m3_r\");");
    gold.append("\n    m3_r.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"m4_r\");");
    gold.append("\n    m4_r.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"mh4_r\");");
    gold.append("\n    mh4_r.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpEnqueuedTaskManager(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    m2_r.__commit(\"m2_r\", __forward, __reverse);");
    gold.append("\n    m3_r.__commit(\"m3_r\", __forward, __reverse);");
    gold.append("\n    m4_r.__commit(\"m4_r\", __forward, __reverse);");
    gold.append("\n    mh4_r.__commit(\"mh4_r\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    m2_r.__revert();");
    gold.append("\n    m3_r.__revert();");
    gold.append("\n    m4_r.__revert();");
    gold.append("\n    mh4_r.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __writeRxReport(JsonStreamWriter __writer) { }");
    gold.append("\n  public class DeltaPrivacyCache {");
    gold.append("\n    public DeltaPrivacyCache(NtPrincipal __who) {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaUsage_4 implements DeltaNode {");
    gold.append("\n    private DStringProxy __dm2_r;");
    gold.append("\n    private DStringProxy __dm3_r;");
    gold.append("\n    private DStringProxy __dm4_r;");
    gold.append("\n    private DStringProxy __dmh4_r;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaUsage_4() {");
    gold.append("\n      __dm2_r = new DStringProxy();");
    gold.append("\n      __dm3_r = new DStringProxy();");
    gold.append("\n      __dm4_r = new DStringProxy();");
    gold.append("\n      __dmh4_r = new DStringProxy();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dm2_r.__memory();");
    gold.append("\n      __sum += __dm3_r.__memory();");
    gold.append("\n      __sum += __dm4_r.__memory();");
    gold.append("\n      __sum += __dmh4_r.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public boolean show(Usage_4 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      DeltaPrivacyCache __policy_cache = new DeltaPrivacyCache(__writer.who);");
    gold.append("\n      __writer.setCacheObject(__policy_cache);");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      __dm2_r.show(__item.m2_r.get(), __obj.planField(\"m2_r\"));");
    gold.append("\n      __dm3_r.show(__item.m3_r.get(), __obj.planField(\"m3_r\"));");
    gold.append("\n      __dm4_r.show(__item.m4_r.get(), __obj.planField(\"m4_r\"));");
    gold.append("\n      __dmh4_r.show(__item.mh4_r.get(), __obj.planField(\"mh4_r\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n      return true;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dm2_r.clear();");
    gold.append("\n      __dm3_r.clear();");
    gold.append("\n      __dm4_r.clear();");
    gold.append("\n      __dmh4_r.clear();");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective) {");
    gold.append("\n    Usage_4 __self = this;");
    gold.append("\n    DeltaUsage_4 __state = new DeltaUsage_4();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    int __viewId = __genViewId();");
    gold.append("\n    return new PrivateView(__viewId, __who, ___perspective) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __viewId));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() { return 64; }");
    gold.append("\n    public void __reset() {}");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __parsed() throws AbortMessageException {}");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  public static void __create_generic_clients(ServiceRegistry __registry, HeaderDecryptor decryptor) throws Exception {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public Service __findService(String __name) { return null; }");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext context, String channel, Object __message) throws AbortMessageException {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __metrics() { return \"{}\"; }");
    gold.append("\n  @Override");
    gold.append("\n  public String __traffic(CoreRequestContext __context) { return \"\"; }");
    gold.append("\n  @Override");
    gold.append("\n  public void __debug(JsonStreamWriter __writer) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected long __computeGraphs() { return 0; }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  public AuthResponse __authpipe(CoreRequestContext __context, String __message) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __make_cron_progress() {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_cron() {}");
    gold.append("\n  @Override");
    gold.append("\n  public Long __predict_cron_wake_time() { return null; }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(CoreRequestContext __context, WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(CoreRequestContext __context, WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(CoreRequestContext __context, WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(CoreRequestContext __context, WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  private void __step_nc() {");
    gold.append("\n    __code_cost += 5;");
    gold.append("\n    __track(0);");
    gold.append("\n    NtMatrix2 m2_n = new NtMatrix2(1.0, 0.0, 0.0, 1.0);");
    gold.append("\n    __track(1);");
    gold.append("\n    NtMatrix3 m3_n = new NtMatrix3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0);");
    gold.append("\n    __track(2);");
    gold.append("\n    NtMatrix4 m4_n = new NtMatrix4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);");
    gold.append("\n    __track(3);");
    gold.append("\n    NtMatrixH4 mh4_n = new NtMatrixH4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {");
    gold.append("\n    switch(__new_state) {");
    gold.append("\n      case \"nc\":");
    gold.append("\n        __step_nc();");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) throws AbortMessageException {}");
    gold.append("\n  private void __construct_0(CoreRequestContext __context, NtPrincipal __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 5;");
    gold.append("\n    __track(4);");
    gold.append("\n    m2_r.set(new NtMatrix2(1, 2, 3, 4));");
    gold.append("\n    __track(5);");
    gold.append("\n    m3_r.set(new NtMatrix3(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9));");
    gold.append("\n    __track(6);");
    gold.append("\n    m4_r.set(new NtMatrix4(10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160));");
    gold.append("\n    __track(7);");
    gold.append("\n    mh4_r.set(new NtMatrixH4(100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200));");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext __context, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__context, __context.who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--=[LivingDocumentFactory COMPILING]=---");
    gold.append("\n--=[LivingDocumentFactory MADE]=---");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"m2_r\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"matrix2\"},\"computed\":false,\"privacy\":\"public\"},\"m3_r\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"matrix3\"},\"computed\":false,\"privacy\":\"public\"},\"m4_r\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"matrix4\"},\"computed\":false,\"privacy\":\"public\"},\"mh4_r\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"matrixh4\"},\"computed\":false,\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}}},\"channels\":{},\"channels-privacy\":{},\"constructors\":[],\"labels\":[\"nc\"]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"m2_r\":\"1.0|2.0|3.0|4.0\",\"m3_r\":\"0.1|0.2|0.3|0.4|0.5|0.6|0.7|0.8|0.9\",\"m4_r\":\"10.0|20.0|30.0|40.0|50.0|60.0|70.0|80.0|90.0|100.0|110.0|120.0|130.0|140.0|150.0|160.0\",\"mh4_r\":\"100.0|200.0|300.0|400.0|500.0|600.0|700.0|800.0|900.0|1000.0|1100.0|1200.0\",\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:0");
    gold.append("\nCPU:5");
    gold.append("\nMEMORY:4160");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:0");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"m2_r\":\"1.0|2.0|3.0|4.0\",\"m3_r\":\"0.1|0.2|0.3|0.4|0.5|0.6|0.7|0.8|0.9\",\"m4_r\":\"10.0|20.0|30.0|40.0|50.0|60.0|70.0|80.0|90.0|100.0|110.0|120.0|130.0|140.0|150.0|160.0\",\"mh4_r\":\"100.0|200.0|300.0|400.0|500.0|600.0|700.0|800.0|900.0|1000.0|1100.0|1200.0\"},\"seq\":3}");
    gold.append("\nNO_ONE|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"75\"} need:false in:0");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"m2_r\":\"1.0|2.0|3.0|4.0\",\"m3_r\":\"0.1|0.2|0.3|0.4|0.5|0.6|0.7|0.8|0.9\",\"m4_r\":\"10.0|20.0|30.0|40.0|50.0|60.0|70.0|80.0|90.0|100.0|110.0|120.0|130.0|140.0|150.0|160.0\",\"mh4_r\":\"100.0|200.0|300.0|400.0|500.0|600.0|700.0|800.0|900.0|1000.0|1100.0|1200.0\"},\"seq\":4}");
    gold.append("\nRANDO|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__time\":\"100\"} need:false in:0");
    gold.append("\nRANDO|SUCCESS:5");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n+ RANDO DELTA:{\"seq\":5}");
    gold.append("\nMEMORY:5910");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"__snapshot\":\"0/0\",\"m2_r\":\"1.0|2.0|3.0|4.0\",\"m3_r\":\"0.1|0.2|0.3|0.4|0.5|0.6|0.7|0.8|0.9\",\"m4_r\":\"10.0|20.0|30.0|40.0|50.0|60.0|70.0|80.0|90.0|100.0|110.0|120.0|130.0|140.0|150.0|160.0\",\"mh4_r\":\"100.0|200.0|300.0|400.0|500.0|600.0|700.0|800.0|900.0|1000.0|1100.0|1200.0\",\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{}");
    gold.append("\n--METRIC RESULTS-----------------------------------");
    gold.append("\n{\"__snapshot\":\"0/0\",\"m2_r\":\"1.0|2.0|3.0|4.0\",\"m3_r\":\"0.1|0.2|0.3|0.4|0.5|0.6|0.7|0.8|0.9\",\"m4_r\":\"10.0|20.0|30.0|40.0|50.0|60.0|70.0|80.0|90.0|100.0|110.0|120.0|130.0|140.0|150.0|160.0\",\"mh4_r\":\"100.0|200.0|300.0|400.0|500.0|600.0|700.0|800.0|900.0|1000.0|1100.0|1200.0\",\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"__snapshot\":\"0/0\",\"m2_r\":\"1.0|2.0|3.0|4.0\",\"m3_r\":\"0.1|0.2|0.3|0.4|0.5|0.6|0.7|0.8|0.9\",\"m4_r\":\"10.0|20.0|30.0|40.0|50.0|60.0|70.0|80.0|90.0|100.0|110.0|120.0|130.0|140.0|150.0|160.0\",\"mh4_r\":\"100.0|200.0|300.0|400.0|500.0|600.0|700.0|800.0|900.0|1000.0|1100.0|1200.0\",\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
}
